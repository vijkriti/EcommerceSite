// <auto-generated />
using Ecommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240630205122_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            Name = "OnePlus"
                        });
                });

            modelBuilder.Entity("Ecommerce.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phones"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TV"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tablets"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Earphones"
                        });
                });

            modelBuilder.Entity("Ecommerce.Models.LoginCredentials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginCredentials");
                });

            modelBuilder.Entity("Ecommerce.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 3,
                            Description = "This is Samsung Tablet description.",
                            ImgPath = "Tablet.jpg",
                            Name = "Samsung Tablet",
                            Price = 30000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CategoryId = 3,
                            Description = "This is iPad description.",
                            ImgPath = "iPad.jpg",
                            Name = "iPad",
                            Price = 100000m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "This is Samsung TV description.",
                            ImgPath = "TV.jpg",
                            Name = "Samsung TV",
                            Price = 80000m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "This is Samsung M32 description.",
                            ImgPath = "M32.jpg",
                            Name = "Samsung M32",
                            Price = 20000m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            CategoryId = 1,
                            Description = "This is OnePlus 9 description.",
                            ImgPath = "OnePlus9.jpg",
                            Name = "OnePlus 9",
                            Price = 45000m,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            CategoryId = 4,
                            Description = "This is MacBook Pro description.",
                            ImgPath = "MacBookPro.jpg",
                            Name = "Apple MacBook Pro",
                            Price = 150000m,
                            Quantity = 8
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 1,
                            CategoryId = 2,
                            Description = "This is Samsung QLED TV description.",
                            ImgPath = "QLED.jpg",
                            Name = "Samsung QLED 4K TV",
                            Price = 120000m,
                            Quantity = 12
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 2,
                            CategoryId = 3,
                            Description = "This is iPad Pro description.",
                            ImgPath = "iPadPro.jpg",
                            Name = "iPad Pro",
                            Price = 120000m,
                            Quantity = 15
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 3,
                            CategoryId = 5,
                            Description = "This is OnePlus Buds description.",
                            ImgPath = "OnePlusBuds.jpg",
                            Name = "OnePlus Buds",
                            Price = 8000m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 1,
                            CategoryId = 1,
                            Description = "This is Samsung Galaxy S21 description.",
                            ImgPath = "GalaxyS21.jpg",
                            Name = "Samsung Galaxy S21",
                            Price = 80000m,
                            Quantity = 25
                        });
                });

            modelBuilder.Entity("Ecommerce.Models.ProductOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OrderDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrders");
                });

            modelBuilder.Entity("Ecommerce.Models.Product", b =>
                {
                    b.HasOne("Ecommerce.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Ecommerce.Models.ProductOrder", b =>
                {
                    b.HasOne("Ecommerce.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Ecommerce.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
